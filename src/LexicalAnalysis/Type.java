package LexicalAnalysis;
public enum Type {
//----------KEYWORDS----------
FUNCTIONDECLARATION, RETURNINDICATOR, IDENTIFIER, CONSISTENCYINDICATOR, CLOSEDFUNCTION, OPENFUNCTION,//indicates return line of a fxn
//----------LOOPING----------
LOOPINITIALIZATION, FOR, WHILE, WHILETRUE,
//----------CONDITIONALS----------
IF, ELSE,
//----------DATA TYPES----------
INTEGER, DOUBLE, BOOLEAN, STRING, CHAR, TRUE, FALSE,
INTEGER_INDICATOR,
DOUBLE_INDICATOR,
BOOLEAN_INDICATOR,
STRING_INDICATOR,
CHAR_INDICATOR,
//----------SINGLE CHARACTER TOKENS----------
CBRACKET, OBRACKET, QUOTE, ASSIGNMENT,
//----------OPERATORS----------
PLUS, PLUS_PLUS, PLUS_EQUALS,
MINUS, MINUS_MINUS, MINUS_EQUALS,
TIMES, TIMES_TIMES, TIMES_EQUALS,
DIVIDE, DIVIDE_EQUALS,
MOD, MOD_EQUALS,
POWEROF, POWEROF_POWEROF, /* This raises something to its own power. Ex, 3^^ = 27 */POWEROF_EQUALS, 
FACTORIAL,

GREATER, LESS, GREATEROREQUALS, LESSOREQUALS,
EQUALS, DOESNOTEQUAL, EQUALS_EQUALS,

OR, AND, NOT,
//----------BUILT IN FUNCTIONS----------
ARRAYADD, ARRAYCHANGE, ARRAYDELETE, PRINT,

//other
END_OF_FILE, SPACE, ERROR, STATEMENT_LIST, PARAMETER_LIST, PARAMETER_STATEMENT, UNARYEXPRESSION, NULL, FUNCTIONCALL, ARGUMENTLIST, 







}
